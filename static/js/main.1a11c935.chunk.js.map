{"version":3,"sources":["components/styled/App.styled.js","components/styled/Wallet.styled.js","components/styled/Sidebar.styled.js","components/Sidebar.js","components/styled/WalletActive.styled.js","hooks/useInputState.js","components/styled/WalletForm.styled.js","modules/api/api.api.js","modules/api/api.actions.js","modules/api/api.types.js","components/WalletForm.js","modules/wallet/wallet.actions.js","modules/wallet/wallet.types.js","components/styled/WalletHistory.styled.js","components/WalletHistory.js","components/styled/WalletMain.styled.js","components/WalletMain.js","components/WalletActive.js","components/Wallet.js","components/App.js","modules/wallet/wallet.reducer.js","modules/api/api.reducer.js","modules/reducers.js","store.js","reportWebVitals.js","components/styled/GlobalStyles.js","index.js"],"names":["StyledApp","styled","div","StyledWallet","StyledSidebar","section","Sidebar","props","onClick","setCurrentPage","StyledWalletActive","initialValue","useState","value","setValue","e","target","StyledWalletForm","accessKey","process","baseUrl","save","dispatch","getState","url","fetch","then","resp","ok","json","Error","statusText","rates","catch","error","console","log","fetchCurrentRates","type","payload","saveCurrentRates","getSuggestedRate","date","currency","toFixed","err","fetchRateForDate","rate","saveSuggestedRate","WalletForm","useInputState","handleCurrency","resetCurrency","amount","handleAmount","resetAmount","currentDate","Date","toJSON","slice","handleDate","resetDate","suggestedRate","handleRate","setRate","resetRate","useEffect","purchase","id","uuidv4","curr","purchaseDate","purchasePrice","useDispatch","onSubmit","preventDefault","addPurchaseAction","htmlFor","name","onChange","min","max","StyledWalletHistory","WalletHistory","map","t","data","row","index","currentRate","currentValue","profitLoss","previousValue","percent","StyledWalletMain","WalletMain","totals","forEach","sum","push","total","reduce","a","b","currInWallet","getCurrenciesInWallet","Object","entries","key","showCurrienciesInWallet","WalletActive","currentPage","Wallet","useSelector","state","wallet","api","App","initState","walletReducer","action","apiReducer","reducers","combineReducers","store","createStore","purchases","localStorage","getItem","JSON","parse","loadFromLocalStorage","composeWithDevTools","applyMiddleware","thunk","subscribe","purchasesState","stringify","setItem","saveToLocalStorage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a11c935.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst StyledApp = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: #1f2943;\n`;\n\nexport default StyledApp;\n","import styled from \"styled-components\";\n\nconst StyledWallet = styled.div`\n    display: flex;\n    width: 100vw;\n    align-items: center;\n\n    @media (max-width: 1000px) {\n        flex-direction: column;\n    }\n`;\n\nexport default StyledWallet;\n","import styled from \"styled-components\";\n\nconst StyledSidebar = styled.section`\n    height: 100vh;\n    width: 10%;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    background-color: #37405a;\n    padding: 3rem 1rem;\n    color: white;\n\n    & h2 {\n        font-size: 1.5rem;\n        margin-bottom: 0.5rem;\n    }\n\n    h3 {\n        font-size: 1.2rem;\n        margin-bottom: 2rem;\n    }\n\n    & div {\n        display: flex;\n        flex-direction: column;\n\n        & button {\n            padding: 0.5rem 0;\n            margin: 0.2rem 0;\n        }\n    }\n\n    @media (max-width: 1200px) {\n        width: 30%;\n    }\n\n    @media (max-width: 1000px) {\n        width: 100%;\n        height: 20vh;\n\n        & div {\n            flex-direction: row;\n            justify-content: space-around;\n\n            & button {\n                width: 200px;\n            }\n        }\n    }\n`;\n\nexport default StyledSidebar;\n","import React from \"react\";\nimport StyledSidebar from \"./styled/Sidebar.styled\";\n\nconst Sidebar = (props) => {\n    return (\n        <StyledSidebar>\n            <h2>Online Wallet</h2>\n            <h3>Currency exchange</h3>\n            <div>\n                <button onClick={() => props.setCurrentPage(1)}>Wallet</button>\n                <button onClick={() => props.setCurrentPage(2)}>\n                    Add currency\n                </button>\n                <button onClick={() => props.setCurrentPage(3)}>History</button>\n            </div>\n        </StyledSidebar>\n    );\n};\n\nexport default Sidebar;\n","import styled from \"styled-components\";\n\nconst StyledWalletActive = styled.section`\n    width: 90%;\n`;\n\nexport default StyledWalletActive;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    const reset = () => {\n        setValue(initialValue);\n    };\n\n    return [value, handleChange, setValue, reset];\n};\n","import styled from \"styled-components\";\n\nconst StyledWalletForm = styled.div`\n    color: white;\n    font-size: 1.5rem;\n    background-color: #37405a;\n    margin: 0.5rem 0.2rem;\n    padding: 2rem;\n    text-align: center;\n\n    & h2 {\n        margin: 1rem 0;\n    }\n\n    & form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        & label {\n            min-width: 200px;\n\n            & input,\n            select {\n                margin-left: 15px;\n            }\n        }\n\n        & button {\n            margin-top: 1rem;\n        }\n    }\n`;\n\nexport default StyledWalletForm;\n","const accessKey = process.env.REACT_APP_ACCESS_KEY;\n\nconst baseUrl = \"http://api.exchangeratesapi.io/v1\";\n\nexport const fetchCurrentRates = () => {\n    const currency = \"USD, JPY, GBP, CHF, CAD, AUD\";\n    const url = `${baseUrl}/latest?access_key=${accessKey}&symbols=${currency}`;\n\n    return fetch(url)\n        .then((resp) => {\n            if (resp.ok) {\n                return resp.json();\n            }\n\n            throw Error(resp.statusText);\n        })\n        .then((resp) => {\n            const rates = resp.rates;\n            return rates;\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const fetchRateForDate = (date, currency) => {\n    const url = `${baseUrl}/${date}?access_key=${accessKey}&symbols=${currency}`;\n\n    return fetch(url)\n        .then((resp) => {\n            if (resp.ok) {\n                return resp.json();\n            }\n\n            throw Error(resp.statusText);\n        })\n        .then((resp) => {\n            const rate = resp.rates[currency].toFixed(2);\n            return rate;\n        })\n        .catch((err) => {\n            console.error(err);\n        });\n};\n","import { SAVE_CURRENT_RATES, SAVE_SUGGESTED_RATE } from \"./api.types\";\nimport { fetchCurrentRates, fetchRateForDate } from \"./api.api\";\n\nexport const saveCurrentRates = (rates) => ({\n    type: SAVE_CURRENT_RATES,\n    payload: { rates },\n});\n\nexport const saveSuggestedRate = (rate) => ({\n    type: SAVE_SUGGESTED_RATE,\n    payload: { rate },\n});\n\nexport const save = () => {\n    return function thunk(dispatch, getState) {\n        fetchCurrentRates().then((rates) => {\n            dispatch(saveCurrentRates(rates));\n        });\n    };\n};\n\nexport const getSuggestedRate = (date, currency) => {\n    return function thunk(dispatch, getState) {\n        fetchRateForDate(date, currency).then((rate) => {\n            dispatch(saveSuggestedRate(rate));\n        });\n    };\n};\n","const SAVE_CURRENT_RATES = \"SAVE_CURRENT_RATES\";\nconst SAVE_SUGGESTED_RATE = \"SAVE_SUGGESTED_RATE\";\n\nexport { SAVE_CURRENT_RATES, SAVE_SUGGESTED_RATE };\n","import React, { useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useInputState from \"../hooks/useInputState\";\nimport { useDispatch } from \"react-redux\";\nimport { addPurchaseAction } from \"../modules/wallet/wallet.actions\";\nimport StyledWalletForm from \"./styled/WalletForm.styled\";\nimport { getSuggestedRate } from \"../modules/api/api.actions\";\n\nconst WalletForm = (props) => {\n    const [currency, handleCurrency, setCurrency, resetCurrency] =\n        useInputState(\"GBP\");\n    const [amount, handleAmount, setAmount, resetAmount] = useInputState(\"\");\n    const currentDate = new Date().toJSON().slice(0, 10);\n    const [date, handleDate, setDate, resetDate] = useInputState(currentDate);\n    const [rate, handleRate, setRate, resetRate] = useInputState(\n        props.rates.suggestedRate\n    );\n\n    useEffect(() => {\n        dispatch(getSuggestedRate(date, currency));\n    }, [currency, date]);\n\n    useEffect(() => {\n        setRate(props.rates.suggestedRate);\n    }, [props.rates.suggestedRate]);\n\n    const purchase = {\n        id: uuidv4(),\n        curr: currency,\n        amount: amount,\n        purchaseDate: date,\n        purchasePrice: rate,\n    };\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addPurchaseAction(purchase));\n        resetCurrency();\n        resetAmount();\n        resetDate();\n        resetRate();\n    };\n\n    return (\n        <StyledWalletForm>\n            <form onSubmit={handleSubmit}>\n                <h2>Add new purchase to your wallet</h2>\n                <label htmlFor=\"currency\">\n                    Select currency:\n                    <select\n                        name=\"currency\"\n                        value={currency}\n                        onChange={handleCurrency}\n                    >\n                        <option value=\"GBP\">GBP</option>\n                        <option value=\"USD\">USD</option>\n                        <option value=\"JPY\">JPY</option>\n                        <option value=\"CHF\">CHF</option>\n                        <option value=\"CAD\">CAD</option>\n                        <option value=\"AUD\">AUD</option>\n                        <option value=\"PLN\">PLN</option>\n                    </select>\n                </label>\n                <label htmlFor=\"amount\">\n                    Select quantity\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        name=\"amount\"\n                        value={amount}\n                        onChange={handleAmount}\n                    ></input>\n                </label>\n                <label htmlFor=\"purchaseDate\">\n                    Purchase date:\n                    <input\n                        type=\"date\"\n                        name=\"purchaseDate\"\n                        min=\"2000-01-01\"\n                        max={currentDate}\n                        value={date}\n                        onChange={handleDate}\n                    ></input>\n                </label>\n                <label htmlFor=\"purchaseRate\">\n                    Purchase rate:\n                    <input\n                        type=\"number\"\n                        name=\"purchaseRate\"\n                        value={rate}\n                        onChange={handleRate}\n                    ></input>\n                </label>\n                <button type=\"submit\">Add purchase</button>\n            </form>\n        </StyledWalletForm>\n    );\n};\n\nexport default WalletForm;\n","import { ADD_PURCHASE } from \"./wallet.types\";\n\nexport const addPurchaseAction = (purchase) => {\n    return {\n        type: ADD_PURCHASE,\n        payload: { purchase },\n    };\n};\n","const ADD_PURCHASE = \"ADD_PURCHASE\";\n\nexport { ADD_PURCHASE };\n","import styled from \"styled-components\";\n\nconst StyledWalletHistory = styled.div`\n    background-color: lightsteelblue;\n    font-size: 1.5rem;\n    padding: 2rem 4rem;\n    display: flex;\n    flex-direction: column;\n\n    & h2 {\n        margin-bottom: 0.5rem;\n        text-align: center;\n    }\n\n    & table,\n    th,\n    td {\n        border: 1px solid white;\n    }\n\n    & th,\n    td {\n        padding: 0.7rem;\n    }\n\n    @media (max-width: 1200px) {\n        margin: 2rem 1rem;\n        padding: 2rem 4rem;\n\n        & th,\n        td {\n            padding: 0.3rem;\n        }\n    }\n\n    @media (max-width: 1000px) {\n        margin: 2rem 1rem;\n        padding: 2rem 1rem;\n\n        & th,\n        td {\n            padding: 0.7rem;\n        }\n    }\n\n    @media (max-width: 900px) {\n        margin: 2rem 0;\n        font-size: 1rem;\n\n        & th,\n        td {\n            padding: 0.3rem;\n        }\n    }\n`;\n\nexport default StyledWalletHistory;\n","import React from \"react\";\nimport StyledWalletHistory from \"./styled/WalletHistory.styled\";\n\nconst WalletHistory = (props) => {\n    const tableHead = () => {\n        const ths = [\n            \"Currency\",\n            \"Amount\",\n            \"Purchase Date\",\n            \"Purchase Rate\",\n            \"Current Rate\",\n            \"Current Value\",\n            \"Profit / Loss\",\n        ];\n\n        return ths.map((t) => <th key={t}>{t}</th>);\n    };\n\n    const tbody = () => {\n        return props.data.map((row, index) => {\n            const { curr, amount, purchaseDate, purchasePrice, currentRate } =\n                row;\n            const currentValue = amount * currentRate;\n            const profitLoss = currentValue - amount * purchasePrice;\n            const previousValue = amount * purchasePrice;\n            const percent =\n                ((currentValue - previousValue) / previousValue) * 100;\n            return (\n                <tr key={index}>\n                    <td>{curr}</td>\n                    <td>{amount}</td>\n                    <td>{purchaseDate}</td>\n                    <td>{purchasePrice}</td>\n                    <td>{currentRate}</td>\n                    <td>{currentValue.toFixed(0)}</td>\n                    <td>\n                        {profitLoss.toFixed(0)} ({percent.toFixed(2)}%)\n                    </td>\n                </tr>\n            );\n        });\n    };\n\n    return (\n        <StyledWalletHistory>\n            <h2>History of your purchases</h2>\n            <table>\n                <thead>\n                    <tr>{tableHead()}</tr>\n                </thead>\n                <tbody>{tbody()}</tbody>\n            </table>\n        </StyledWalletHistory>\n    );\n};\n\nexport default WalletHistory;\n","import styled from \"styled-components\";\n\nconst StyledWalletMain = styled.div`\n    color: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & h1 {\n        font-size: 2rem;\n        margin: 2rem 0;\n\n        & span {\n            font-size: 2.5rem;\n            color: #2da1ef;\n        }\n    }\n\n    & li {\n        padding: 0.5rem;\n    }\n`;\n\nexport default StyledWalletMain;\n","import React from \"react\";\nimport StyledWalletMain from \"./styled/WalletMain.styled\";\n\nconst WalletMain = (props) => {\n    const totals = [];\n    props.data.forEach((purchase) => {\n        const sum = purchase.amount * purchase.currentRate;\n        totals.push(sum);\n    });\n    const total = totals.reduce((a, b) => a + b, 0);\n\n    const getCurrenciesInWallet = () => {\n        const currInWallet = {};\n        props.data.forEach((purchase) => {\n            const total = purchase.amount * purchase.currentRate;\n            if (!currInWallet[purchase.curr]) {\n                currInWallet[purchase.curr] = [];\n                currInWallet[purchase.curr].push(total);\n            } else {\n                currInWallet[purchase.curr].push(total);\n            }\n        });\n        return currInWallet;\n    };\n\n    const showCurrienciesInWallet = () => {\n        const currInWallet = getCurrenciesInWallet();\n        return Object.entries(currInWallet).map(([key, value]) => {\n            return (\n                <li key={key}>\n                    You have {key} worth of €\n                    {value.reduce((a, b) => a + b, 0).toFixed(2)}\n                </li>\n            );\n        });\n    };\n\n    return (\n        <StyledWalletMain>\n            <h1>\n                You have currencies worth of <span>€{total.toFixed(2)}</span> in\n                your wallet\n            </h1>\n            <ul>{showCurrienciesInWallet()}</ul>\n        </StyledWalletMain>\n    );\n};\n\nexport default WalletMain;\n","import React from \"react\";\nimport StyledWalletActive from \"./styled/WalletActive.styled\";\nimport WalletForm from \"./WalletForm\";\nimport WalletHistory from \"./WalletHistory\";\nimport WalletMain from \"./WalletMain\";\n\nconst WalletActive = (props) => {\n    const showCurrentPage = (currentPage) => {\n        if (currentPage === 1) {\n            return <WalletMain data={props.data} />;\n        }\n        if (currentPage === 2) {\n            return <WalletForm rates={props.rates} />;\n        }\n        if (currentPage === 3) {\n            return <WalletHistory data={props.data} />;\n        }\n    };\n    return (\n        <StyledWalletActive>\n            {showCurrentPage(props.currentPage)}\n        </StyledWalletActive>\n    );\n};\n\nexport default WalletActive;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport StyledWallet from \"./styled/Wallet.styled\";\nimport Sidebar from \"./Sidebar\";\nimport WalletActive from \"./WalletActive\";\nimport { save } from \"../modules/api/api.actions\";\n\nconst Wallet = () => {\n    const { data } = useSelector((state) => state.wallet);\n    const rates = useSelector((state) => state.api);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(save());\n        data.map((purchase) => {\n            purchase.currentRate = rates.rates[purchase.curr].toFixed(2);\n        });\n    }, [data]);\n\n    return (\n        <StyledWallet>\n            <Sidebar setCurrentPage={setCurrentPage} />\n            <WalletActive data={data} rates={rates} currentPage={currentPage} />\n        </StyledWallet>\n    );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport StyledApp from \"./styled/App.styled\";\nimport Wallet from \"./Wallet\";\n\nconst App = () => {\n    return (\n        <StyledApp>\n            <Wallet />\n        </StyledApp>\n    );\n};\n\nexport default App;\n","const initState = {\n    data: [],\n};\n\nconst walletReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"ADD_PURCHASE\":\n            return {\n                ...state,\n                data: [...state.data, action.payload.purchase],\n            };\n        default:\n            return state;\n    }\n};\n\nexport default walletReducer;\n","const initState = {\n    rates: {},\n    suggestedRate: null,\n};\n\nconst apiReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"SAVE_CURRENT_RATES\":\n            return {\n                ...state,\n                rates: action.payload.rates,\n            };\n        case \"SAVE_SUGGESTED_RATE\":\n            return {\n                ...state,\n                suggestedRate: action.payload.rate,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default apiReducer;\n","import { combineReducers } from \"redux\";\nimport walletReducer from \"./wallet/wallet.reducer\";\nimport apiReducer from \"./api/api.reducer\";\n\nconst reducers = combineReducers({\n    wallet: walletReducer,\n    api: apiReducer,\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./modules/reducers\";\n\nconst store = createStore(\n    reducers,\n    loadFromLocalStorage(),\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst state = store.getState();\n\nconst saveToLocalStorage = (purchasesState) => {\n    try {\n        const purchases = JSON.stringify(purchasesState);\n        localStorage.setItem(\"purchases\", purchases);\n    } catch (error) {\n        console.log(\"data was not saved\");\n    }\n};\n\nfunction loadFromLocalStorage() {\n    try {\n        const purchases = localStorage.getItem(\"purchases\");\n        if (purchases === null) return undefined;\n        return JSON.parse(purchases);\n    } catch (e) {\n        console.log(\"something went wrong\");\n        return undefined;\n    }\n}\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n}\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n`;\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalStyles from \"./components/styled/GlobalStyles\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(\n    <React.StrictMode>\n        <GlobalStyles />\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}